% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stubble.R, R/stubblise.R
\name{stubble}
\alias{stubble}
\alias{stubblise}
\alias{stubblize}
\title{Create simple simulated data from a tibble}
\usage{
stubblise(tbbl, rows = 10L, ...)

stubblize(tbbl, rows = 10L, ...)
}
\arguments{
\item{tbbl}{the tibble to emulate. Can have 0 rows.}

\item{rows}{the number of simulated rows to generate.}

\item{...}{control parameters for ranges and valid levels/characters in the
synthetic data. See \link{control}.}
}
\value{
A tibble, with the same structure as \code{tbbl}, but containing random
data. Any columns which are not recognised as being of a standard vector
type will have \code{NA} for all rows and the column type will be \code{numeric},
not the original vector type.
}
\description{
\code{stubblise()} (equivalently, \code{stubblize()}) generates synthetic (i.e.
simulated) data to match the structure of a given tibble. See also
\link{gen_col}, which does the work, and \link{control} for information on
user-modifiable parameters.
}
\details{
One intended use of \code{stubblise()} is in generating test data for R
package development. The function can create very simple synthetic data from
most tibbles where columns have standard R vector types. Currently
list-columns are not fully supported, and this and any other unsupported
types will return a column of \code{NA}s (for unsupported types, the resulting
column of \code{NA}s will have type \code{numeric}).

Data are randomly generated by sampling uniformly from a numeric or integer
range or from a selection of e.g. characters or factor levels. The
parameters controlling this sampling can be modified by the user. At
present, the same parameters apply to all columns, and there is no attempt
to make the synthetic data look anything like the original data in \code{tbbl}.

Note that although \code{tbbl} can have 0 rows, there is no benefit to passing
\code{stubblise()} an empty tibble. The computation time is not dependent on
the number of rows in \code{tbbl} (thanks to the magic of S3 methods and lazy
evaluation).  Computation time does increase, approximately linearly, with
the number of columns in \code{tbbl} and with the number of rows required in the
result (\code{rows}).

The function \code{stubblize()} is a synonym for \code{stubblise()}.
}
\section{Sensitive data}{


By default, outputs from \code{stubblise()} should contain no sensitive data,
\emph{unless the column names and types are themselves sensitive}. Tibble
attributes are not preserved by \code{stubblise()} (they are regenerated by
\link[tibble:as_tibble]{tibble::as_tibble} from a list of columns generated by \link{gen_col}).

It is possible to leak sensitive data via a "stubblised" tibble if the
values of the \link{control} parameters have been changed and are themselves
derived from sensitive data. It is recommended to leave these parameters
at their default values in any circumstance that involves sensitive data
(e.g. personal data of any sort).
}

\examples{
\dontrun{
library(stubble)
}
stubblise(iris)
stubblise(iris, fct_lvls = levels(iris$Species))

}
